name: Build and Deploy

on:
  push:
    branches: [ "main" ]
    tags:   [ "v*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-push:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.set-image.outputs.image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Init scripts
        run: make init

      - name: Determine & expose IMAGE
        id: set-image
        run: |
          echo "IMAGE=$(make --quiet print-image)" >> "$GITHUB_OUTPUT"
        # you’ll add a `print-image` target to your Makefile to echo $(IMAGE)

      - name: Build
        run: make build IMAGE=${{ steps.set-image.outputs.image }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push
        run: make push IMAGE=${{ steps.set-image.outputs.image }}

  deploy:
    needs: build-push
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (for k8s manifests)
        uses: actions/checkout@v3

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DO kubeconfig
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 qwake-k8s-cluster

      - name: Deploy to Kubernetes
        run: |
          echo "→ passing IMAGE into make: $IMAGE"
          make deploy IMAGE=${{ needs.build-push.outputs.image }}

      - name: Verify rollout
        run: kubectl rollout status deployment/alethic-ism-api-deployment -n alethic
